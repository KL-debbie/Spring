SL07_NLTRANSACTION_TEMPLATE p507

1. root-context.xml (DB연동)
transactionManager 등록

2. 트랜잭션 처리
1) 게시글 (공지사항) 글쓰기 
2) 작성자의 포인트 1 증가

1 and 2 > 성공
1 or 2 > 롤백

3. 포인트 컬럼 > member 테이블에 추가
4. 제약조건 추가
>> 제목이 같으면 유일성 제약조건
>> 포인트 3이상 체크 제약조건

5. MemberVO > point 필드 추가

6. 계정 추가
7. 게시글 작성 + 작성자 포인트 증가
1)NoticeDao, Impl
insertAndPointUpOfMember 추가 , 구현

7. CustomerController 수정

8. 테스트
TEST-1 쓰기  > 포인트 = 1
TEST-2 쓰기  > 포인트 = 2
TEST-3 쓰기  > 포인트 = 3  > 체크제약조건 >    point <3 오류  

9. 트랜잭션 처리
1) root-context.xml > <bean id="transactionManager" > 존재 확인

2) NoticeDaoImpl > 
	@Autowired
	private DataSourceTransactionManager transactionManager;  추가
	
3) 
TEST-4 쓰기  > 포인트 = 2 
TEST-5 쓰기  > 포인트 = 3 > 오류발생 > 롤백 > 글이 없어야됨

----------------------------------------------------------------------------------------
p513 TransactionTemplate을 이용한 트랜잭션
1. root-context.xml >
  <bean class="org.springframework.transaction.support.TransactionTemplate" id="transactionTemplate">
   	<property name="transactionManager" ref="transactionManager"></property>
   </bean>
   등록
   
2. NoticeDaoImpl > 수정

3. 테스트
TEST-5 쓰기 > 포인트 = 2

----------------------------------------------------------------------------------------
p505 스프링 트랜잭션 처리
p522확인