SL08_TILES_TEST
SL00_DefaultSettings복사

스프링 타일즈
ㄴ 페이지의 모듈화(집중화)
ㄴ 공통적인 부분( 헤더, 풋터, 사이드 ) >> 참조

3. webapp 폴더
ㄴ w3ss_layout_flexbox.jsp 파일 붙여넣기
ㄴ resources > w3ss폴더 생성 > css폴더 > flexbox.css 파일 추가

4. http://tiles.apache.org  > pom.xml   3.0.8 타일즈 모듈 4개 추가

      <!-- 7. Tiles -->
      <dependency>
           <groupId>org.apache.tiles</groupId>
           <artifactId>tiles-extras</artifactId>
           <version>${org.apache.tiles-version}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-core</artifactId>
            <version>${org.apache.tiles-version}</version>
          </dependency>  
          <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-servlet</artifactId>
            <version>${org.apache.tiles-version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>${org.apache.tiles-version}</version>
          </dependency>
          
5. 페이지 모듈화
views 폴더 > layout폴더( + header.jsp, footer.jsp, template.jsp) >  city폴더(london,paris,seoul.jsp) > layout폴더(nav,template.jsp)

6. WEB-INF >tiles 폴더 > 

7.
root-context.xml DB연동 관련 빈 객체 등록
security-context.xml 보안 관련 빈 객체 등록

servlet-context.xml 

<!--  Tiles  -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
        <beans:list>
          <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
        </beans:list>
      </beans:property>
    </beans:bean>
    
     <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
      <beans:property name="order" value="1" />
    </beans:bean>
  
8. tiles.xml 수정
    
