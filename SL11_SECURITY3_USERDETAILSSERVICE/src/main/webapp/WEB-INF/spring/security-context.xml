<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

   <!-- 에러 : spring-security-4.2.xsd 수정. -->   
   <!-- css, js, image 등 접근 제어 대상이 아니기에 보안필터 체인을 적용하지 않도록 하는 코딩 -->
   <security:http pattern="/static/**" security="none"></security:http>   
   <security:http pattern="/design/**" security="none"></security:http>   
   
   <security:http use-expressions="true"> 
<!--  접근 권한 설정 -->

<!-- 	  <security:intercept-url pattern="/user/loginForm.htm" access="permitAll"/> -->
<!-- 	  <security:intercept-url pattern="/admin/manage/**" access="hasAuthority('ROLE_MANAGER')"/> -->
<!-- 	  <security:intercept-url pattern="/member/**" access="isAuthenticated()"/> -->
<!-- 	  <security:intercept-url pattern="/**" access="permitAll"/> -->
			<security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()"/>
			<security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')"/>
			<security:intercept-url pattern="/**" access="permitAll"/>
			
			<!-- 접근 금지 발생 시 특정 url로 이동 error-page = ""-->
			<!-- 	<security:access-denied-handler error-page="/common/accessError.htm" /> -->
			
			<!-- 접근 금지 발생 > 클래스 이동(직접 구현) -->
			<security:access-denied-handler ref="customAccessDeniedHandler"/>
				
<!-- 	  <security:form-login/>   -->
			<!-- 커스텀 로그인 페이지 -->
		<security:form-login 
		login-page="/joinus/login.htm"
		authentication-success-handler-ref="customLoginSuccessHandler"
		authentication-failure-url="/joinus/login.htm?error=true"
		default-target-url="/index.htm"
		/>
		
		<security:logout logout-url="/joinus/logout.htm" invalidate-session="true" logout-success-url="/"/>
   </security:http>   
   
   <bean  id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
   
   <security:authentication-manager> 
   		<security:authentication-provider user-service-ref="customUserDetailsService">
   		
<!--  			<security:jdbc-user-service data-source-ref="dataSource" -->
<!--  			users-by-username-query="SELECT id AS USERNAME, pwd AS PASSWORD, enabled FROM member WHERE id = ?" -->
<!--  			authorities-by-username-query="SELECT username AS userid, authority AS auth FROM member_authorities WHERE username = ?  " />	-->
 		
 			<security:password-encoder ref="bCryptPasswordEncoder"/>
   		</security:authentication-provider>
   </security:authentication-manager>

<!-- CSRF 토큰 사용  X, 보안에 취약
	<security:csrf disabled="true"/>
	-->
	
	
</beans>
